@page "/Adults"
@using DNP1Assignment1.Models
@using DNP1Assignment1.Persistence
@inject IFileContext AdultsData

<h1>
    Adults list
</h1>
<p>
    Filter by name:<input type="text" @oninput="@((arg) => Filter(arg))" style="width: 200px"/>
</p>
@if (adultsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>No Adults information exist.</em>
    </p>
}
else if (adultsToShow.Any())
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>HairColor</th>
            <th>EyeColor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Gender</th>
            <th>JobTitle</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in adultsToShow)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
                <td>@item.JobTitle.JobTitle</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;

    private void Filter(ChangeEventArgs changeEventArgs)
    {
        string? filterByName = null;
        try
        {
            filterByName = changeEventArgs.Value.ToString().ToLower();
        }catch (Exception e){}
        if (filterByName != null)
        {
            adultsToShow = allAdults.Where(t => (t.FirstName.ToLower() + " " + t.LastName.ToLower()).Contains(filterByName)).ToList();
        }
        else
        {
            adultsToShow = allAdults;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        allAdults = AdultsData.GetAdults();
        adultsToShow = allAdults;
    }
}