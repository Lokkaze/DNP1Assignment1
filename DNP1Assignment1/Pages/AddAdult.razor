@page "/AddAdult"
@using DNP1Assignment1.Persistence
@using DNP1Assignment1.Models
@inject IFileContext AdultData
@inject NavigationManager NavigationManager
<h1>
    Add adult
</h1>
<AuthorizeView>
    <NotAuthorized>
        <h2>You need to log in to access this page!</h2>
        </NotAuthorized>
    <ChildContent Context="another_name">
        <Authorized>
            <EditForm Model="@newAdultItem" OnValidSubmit="@AddNewAdult">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="form-group"> First Name:<br/>
                    <InputTextArea @bind-Value="newAdultItem.FirstName"/>
                </div>
                <div class="form-group"> Last Name:<br/>
                    <InputTextArea @bind-Value="newAdultItem.LastName"/>
                </div>
                <div class="form-group"> Hair Color:<br/>
                    <InputTextArea @bind-Value="newAdultItem.HairColor"/>
                </div>
                <div class="form-group"> Eye Color:<br/>
                    <InputTextArea @bind-Value="newAdultItem.EyeColor"/>
                </div>
                <div class="form-group"> Age:<br/>
                    <InputNumber @bind-Value="newAdultItem.Age"/>
                </div>
                <div class="form-group"> Weight:<br/>
                    <InputNumber @bind-Value="newAdultItem.Weight"/>
                </div>
                <div class="form-group"> Height:<br/>
                    <InputNumber @bind-Value="newAdultItem.Height"/>
                </div>
                <div class="form-group"> Job Title:<br/>
                    <InputTextArea @bind-Value="newAdultJob.JobTitle"/>
                </div>
                <div class="form-group"> Salary:<br/>
                    <InputNumber @bind-Value="newAdultJob.Salary"/>
                </div>
                <div class="form-group"> Gender:
                    <select class="form-control selectpicker" @onchange="arg => ChangeGender(arg)">
                        <option>Male</option>
                        <option>Female</option>
                    </select>
                </div>

                <p class="actions">
                    <button class="btn btn-outline-dark" type="submit">Create</button>
                </p>
            </EditForm>
        </Authorized>
    </ChildContent>
</AuthorizeView>
@code {
    private Adult newAdultItem = new Adult();
    private Job newAdultJob = new Job();

    private void ChangeGender(ChangeEventArgs args)
    {
        newAdultItem.Sex = null;
        try
        {
            newAdultItem.Sex = args.Value.ToString();
        }
        catch (Exception e){}
        
    }

    private void AddNewAdult()
    {
        newAdultItem.JobTitle = newAdultJob;
        AdultData.AddAdult(newAdultItem);
        NavigationManager.NavigateTo("/Adults");
    }
}